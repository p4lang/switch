#!/usr/bin/env python

# Copyright 2013-present Barefoot Networks, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sys
import os
from subprocess import Popen
import argparse

root_dir = "@abs_srcdir@"
default_test_dir = os.path.join(root_dir, "ptf-tests", "pd-tests")

parser = argparse.ArgumentParser()
parser.add_argument("--test-dir", required=False,
                    default=default_test_dir,
                    help="directory containing the tests (default %s)" % default_test_dir)
parser.add_argument("--pd-thrift", action="append",
                    help="a directory containing PD Thrift Python bindings, can be used multiple times")
args, unknown_args = parser.parse_known_args()

testutils_dir = os.path.join(root_dir, '..', 'testutils')

max_ports = 9
cpu_port = 64
cpu_veth = 251

if __name__ == "__main__":
    if "@PTF@" == "":
        print "configure could not find an installed version of ptf"
        sys.exit(1)
    new_args = []
    if args.pd_thrift:
        for p in args.pd_thrift:
            new_args += ["--pypath", p]
    switchapi_py = os.path.join("@abs_top_builddir@", "switchapi")
    if os.path.exists(switchapi_py):
        new_args += ["--pypath", switchapi_py]
    switchsai_py = os.path.join("@abs_top_builddir@", "switchsai")
    if os.path.exists(switchsai_py):
        new_args += ["--pypath", switchsai_py]
    new_args += ["--pypath", testutils_dir]
    new_args += ["--test-dir", args.test_dir]
    for port in xrange(max_ports):
        new_args += ["--interface", "%d@veth%d" % (port, 2 * port + 1)]
    new_args += ["--interface", "%s@veth%s" % (cpu_port, cpu_veth)]
    new_args += unknown_args
    child = Popen(["@PTF@"] + new_args)
    child.wait()
    sys.exit(child.returncode)
